Dodac do reducing array:

// array norm using map and reduce:
reduce(map(a, power(abs(_),p)), _+_)

// avarage
val list = List(0,1,2,3,4,5,6,7,8,9)
val sum = reduce(list, _+_)
val length = reduce(map(list, (x:Int) => 1), _+_) //?!?!?!? - why just simply use length

val avg = sum / length

//can we do it using single reduce

val f = (x:(Int, Int), y:(Int, Int)) => (x._1 + y._1, x._2 + y._2)
val (sum, length) = reduce(map(list, (x:Int) => (x,1)), f)
val avg2 = sum / length
